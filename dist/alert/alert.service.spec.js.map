{"version":3,"file":"alert.service.spec.js","sourceRoot":"","sources":["../../src/alert/alert.service.spec.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,OAAO,EAAE,MAAM,EAAoB,MAAM,uBAAuB,CAAC;AAE1E,OAAO,EAAE,YAAY,EAAE,MAAM,iBAAiB,CAAC;AAC/C,OAAO,EAAE,aAAa,EAAE,MAAM,YAAY,CAAC;AAE3C,SAAS,CAAC,aAAa,EAAE;IACvB,IAAI,UAAuB,CAAC;IAC5B,IAAI,SAAuB,CAAC;IAC5B,IAAI,OAAuC,CAAC;IAC5C,UAAU,CAAC;QACT,OAAO,CAAC,sBAAsB,CAAC;YAC7B,SAAS,EAAE,CAAC,YAAY,EAAE,aAAa,CAAC;SACzC,CAAC,CAAC;QAEH,UAAU,GAAG,KAAK,CAAC,aAAa,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;QAEvD,OAAO,GAAG,OAAO,CAAC,eAAe,CAAC,YAAY,CAAC,CAAC;QAChD,SAAS,GAAG,OAAO,CAAC,iBAAiB,CAAC;QACtC,OAAO,CAAC,aAAa,EAAE,CAAC;IAC1B,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,mBAAmB,EAAE,MAAM,CAAC,CAAC,YAAY,CAAC,EAAE,UAAC,OAAqB;QACnE,MAAM,CAAC,OAAO,CAAC,CAAC,UAAU,EAAE,CAAC;IAC/B,CAAC,CAAC,CAAC,CAAC;IAEJ,QAAQ,CAAC,UAAU,EAAE;QACnB,EAAE,CAAC,qDAAqD,EAAE;YACxD,SAAS,CAAC,OAAO,CAAC,aAAa,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC;YAEtD,MAAM,CAAC,UAAU,CAAC,CAAC,oBAAoB,CAAC,aAAa,EAAE,IAAI,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC;QACpF,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { TestBed, inject, ComponentFixture } from '@angular/core/testing';\n\nimport { AlertService } from './alert.service';\nimport { ToastrService } from 'ngx-toastr';\n\nfdescribe('AuthService', () => {\n  let successSpy: jasmine.Spy;\n  let component: AlertService;\n  let fixture: ComponentFixture<AlertService>;\n  beforeEach(() => {\n    TestBed.configureTestingModule({\n      providers: [AlertService, ToastrService]\n    });\n\n    successSpy = spyOn(ToastrService.prototype, 'success');\n\n    fixture = TestBed.createComponent(AlertService);\n    component = fixture.componentInstance;\n    fixture.detectChanges();\n  });\n\n  it('should be created', inject([AlertService], (service: AlertService) => {\n    expect(service).toBeTruthy();\n  }));\n\n  describe('#success', () => {\n    it('should call toastr success with message and options', () => {\n      component.success('success-msg', { 'options': true });\n\n      expect(successSpy).toHaveBeenCalledWith('success-msg', null, { 'options': true });\n    });\n  });\n});\n"]}