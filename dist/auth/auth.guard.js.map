{"version":3,"file":"auth.guard.js","sourceRoot":"","sources":["../../src/auth/auth.guard.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAG3C,OAAO,EAAE,MAAM,EAAE,MAAM,iBAAiB,CAAC;AACzC,OAAO,EAAE,WAAW,EAAE,MAAM,gBAAgB,CAAC;AAC7C,OAAO,EAAE,gBAAgB,EAAE,MAAM,kCAAkC,CAAC;;IAIlE,mBAAoB,MAAc,EAAU,IAAiB,EAAU,SAA2B;QAA9E,WAAM,GAAN,MAAM,CAAQ;QAAU,SAAI,GAAJ,IAAI,CAAa;QAAU,cAAS,GAAT,SAAS,CAAkB;KACjG;IAED,+BAAW,GAAX,UACE,IAA4B,EAC5B,KAA0B;QAF5B,iBAwBC;QApBC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC,IAAI,CAAC,UAAC,eAAwB;YAC/D,EAAE,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC;gBACrB,MAAM,CAAC,QAAQ,CAAC,IAAI,GAAG,KAAI,CAAC,SAAS,CAAC,MAAM,CAAC,iBAAiB,CAAC,SAAS,CAAC;gBACzE,MAAM,CAAC,KAAK,CAAC;aACd;YAED,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;gBAC1C,MAAM,CAAC,IAAI,CAAC;aACb;YAED,IAAM,OAAO,GAAG,KAAI,CAAC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;YAClE,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;gBACb,MAAM,CAAC,QAAQ,CAAC,IAAI,GAAG,KAAI,CAAC,SAAS,CAAC,MAAM,CAAC,iBAAiB,CAAC,SAAS;sBACpE,0BAA0B;sBAC1B,KAAI,CAAC,SAAS,CAAC,MAAM,CAAC,iBAAiB,CAAC,WAAW,CAAC;gBACxD,MAAM,CAAC,KAAK,CAAC;aACd;YAED,MAAM,CAAC,IAAI,CAAC;SACb,CAAC,CAAC;KACJ;;gBA7BF,UAAU;;;;gBAJF,MAAM;gBACN,WAAW;gBACX,gBAAgB;;oBALzB;;SAQa,SAAS","sourcesContent":["import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs/Observable';\nimport { Router } from '@angular/router';\nimport { AuthService } from './auth.service';\nimport { EnvConfigService } from '../env-config/env-config.service';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  constructor(private router: Router, private auth: AuthService, private envConfig: EnvConfigService) {\n  }\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n\n    return this.auth.isAuthenticated().then((isAuthenticated: boolean) => {\n      if (!isAuthenticated) {\n        window.location.href = this.envConfig.config.environmentConfig.parentURL;\n        return false;\n      }\n\n      if (!next.data || !next.data.allowedRoles) {\n        return true;\n      }\n\n      const hasRole = this.auth.hasRequiredRole(next.data.allowedRoles);\n      if (!hasRole) {\n        window.location.href = this.envConfig.config.environmentConfig.parentURL\n          + '/no-access?subAppAccess='\n          + this.envConfig.config.environmentConfig.serviceName;\n        return false;\n      }\n\n      return true;\n    });\n  }\n}\n"]}