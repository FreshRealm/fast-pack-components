{"version":3,"file":"autofocus.directive.js","sourceRoot":"","sources":["../../src/autofocus/autofocus.directive.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAqB,KAAK,EAAE,UAAU,EAAiB,MAAM,eAAe,CAAC;;IAS7F,4BAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;KAAK;IAE/C,qCAAQ,GAAR;QACE,IAAM,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC;QAC9C,UAAU,CAAC;YACT,OAAO,CAAC,KAAK,EAAE,CAAC;SACjB,CAAC,CAAC;QAEH,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;YACtB,OAAO,CAAC,MAAM,GAAG,UAAC,KAAU;gBAC1B,UAAU,CAAC;oBACT,IAAM,CAAC,GAAG,MAAM,CAAC,OAAO,CAAC;oBACzB,IAAM,CAAC,GAAG,MAAM,CAAC,OAAO,CAAC;oBACzB,OAAO,CAAC,KAAK,EAAE,CAAC;oBAChB,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;iBACvB,CAAC,CAAC;aACJ,CAAC;SACH;KACF;IAED,wCAAW,GAAX,UAAY,OAAsB;QAAlC,iBAMC;QALC,EAAE,CAAC,CAAC,OAAO,CAAC,UAAU,IAAI,OAAO,CAAC,UAAU,CAAC,aAAa,KAAK,IAAI,IAAI,OAAO,CAAC,UAAU,CAAC,YAAY,KAAK,KAAK,CAAC,CAAC,CAAC;YACjH,UAAU,CAAC;gBACT,KAAI,CAAC,UAAU,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;aACvC,CAAC,CAAC;SACJ;KACF;;gBAjCF,SAAS,SAAC;oBACT,QAAQ,EAAE,kBAAkB;iBAC7B;;;;gBAJ6C,UAAU;;;iCAMrD,KAAK;+BACL,KAAK;;6BAPR;;SAKa,kBAAkB","sourcesContent":["import { Directive, OnChanges, OnInit, Input, ElementRef, SimpleChanges } from '@angular/core';\n\n@Directive({\n  selector: '[appFPAutoFocus]'\n})\nexport class AutoFocusDirective implements OnInit, OnChanges {\n  @Input() public appAutoFocus: boolean;\n  @Input() public aafLoading: any;\n\n  constructor(private elementRef: ElementRef) { }\n\n  ngOnInit(): void {\n    const element = this.elementRef.nativeElement;\n    setTimeout(() => {\n      element.focus();\n    });\n\n    if (this.appAutoFocus) {\n      element.onblur = (event: any) => {\n        setTimeout(() => {\n          const x = window.scrollX;\n          const y = window.scrollY;\n          element.focus();\n          window.scrollTo(x, y);\n        });\n      };\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.aafLoading && changes.aafLoading.previousValue === true && changes.aafLoading.currentValue === false) {\n      setTimeout(() => {\n        this.elementRef.nativeElement.focus();\n      });\n    }\n  }\n}\n"]}